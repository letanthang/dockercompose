# This is just an example to build an image and run a container on localhost via docker-compose
# Usage (run at project root level):
#   docker-compose -f docker-admin.yml up
#
# To deploy on AWS, use `sh scripts/deploys_ecs <app> <environment>`

version: "2"
services:
  api:
    container_name: octosells-api
    build:
      context: .
      args:
        - APP=octosells_api
        - PORT=8001
        - SECRET_KEY_BASE=${SECRET_KEY_BASE}

    environment:
      - OCTOSELLS_DB_URL=${OCTOSELLS_DB_URL}
      - OCTOSELLS_REPLICA_DB_URLS=${OCTOSELLS_REPLICA_DB_URLS}
      - OCTOSELLS_REDIS_URL=${OCTOSELLS_REDIS_URL}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - HOST=${HOST}
      - PORT=${PORT}
      - JOB_QUEUE_REDIS_URL=${JOB_QUEUE_REDIS_URL}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - OCTOSELLS_ECTO_ENCRYPT_KEY=${OCTOSELLS_ECTO_ENCRYPT_KEY}
      - AWS_SQS_QUEUE_URL=${AWS_SQS_QUEUE_URL}
      - OCTOSELLS_ELASTICSEARCH_URL=${OCTOSELLS_ELASTICSEARCH_URL}
      - OCTOSELLS_ELASTICSEARCH_USERNAME=${OCTOSELLS_ELASTICSEARCH_USERNAME}
      - OCTOSELLS_ELASTICSEARCH_PASSWORD=${OCTOSELLS_ELASTICSEARCH_PASSWORD}
      - MONGODB_URL=${MONGODB_URL}

    ports:
      - "4000:4000"
    networks:
      - backend

  postgres:
    container_name: octosells-postgres
    image: "postgres:12-alpine"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=octosell_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always
    networks:
      - backend

  redis:
    image: "bitnami/redis:5.0"
    container_name: octosells-redis
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/bitnami/redis/data"
    networks:
      - backend

  elasticsearch:
    image: elasticsearch:7.17.3
    container_name: octosells-elasticsearch
    environment:
      # - "ES_JAVA_OPTS=-Xmx256m -Xms256m"
      - ELASTIC_PASSWORD=changeme
      - discovery.type=single-node
      - xpack.security.enabled=true
    ports:
      - 9200:9200
    networks:
      - backend

  mongo:
    image: "mongo"
    container_name: octosells-mongo-db
    ports:
      - 27017:27017
    volumes:
      - "mongo_data:/data/db"
    networks:
      - backend

  elasticmq:
    image: "softwaremill/elasticmq-native"
    container_name: octosells-elastic-mq
    ports:
      - 9324:9324
      - 9325:9325
    volumes:
      - "./elastic.conf.sample:/opt/elasticmq.conf"
    networks:
      - backend

volumes:
  redis_data:
    driver: local
  mongo_data:
    driver: local
  postgres_data:
    driver: local

networks:
  backend:
    driver: bridge
